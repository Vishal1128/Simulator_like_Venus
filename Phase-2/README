================================================
Functional Simulator for RISCV Processor
================================================

Phase 2:-
Implemented data path and control paths to run the Instructions.
Implemented all stages i.e. Fetch, Execute, Decode, Memory, RegWrite
Implemented memory unit and register files for the same

Table of contents
1. Directory Structure
2. How to execute


Directory Structure:
--------------------
CS112-Project
  |
  |- design-doc.docx
  |- code
      |- main.cpp
      |- example.txt

  |- test
      |- count.txt
      |- bubblesort.txt
      |- fibonacci.txt
      |- palindrome.txt
      |- factorial.txt
      |- Assembly Lang Code(Contains assembly code of above program)
  |- Project-statement.txt
  |- README
     


HOW TO RUN:-
------------
	Build the Program	
		$cd src
		$make
	
	Write Your input in .mc filed named "example.txt"	

        On the terminal :-
        g++ main.cpp
        ./a.out
	You will get your desired output in terminal.


Algorithm and Methodology -> See Design Document

Assumption:-
1)ld and sd is not supported and will throw error with message that they are not available.
2)Input document("example.txt") should not have extra and empty line at the end.
3)Structure of input files should be
	I).text with program counter and machine code separated by single space. Format is "Program-counter machine-code", both machine code and program counter are in hex
	II)The to end .text, well have Program counter and string("END PROGRAM"), serrated by single space.
	III)Then .Data component should be there, and last data type should be word(because of some limitation). format is “Location data”, location and data is in hex

